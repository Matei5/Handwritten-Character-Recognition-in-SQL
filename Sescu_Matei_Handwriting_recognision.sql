 --> ==== STEPS ==== <--

--> 1. Run the python script "Canvas.py"
--> 2. Draw your character, don't make it too small
--> 3. Copy the last output line with insert instructions
--> 4. Replace line 25 with it
--> 5. Execute

-- NOTE: It is not perfect, but as long as you've made a
--       genuine attempt to draw a character from A-Z and 0-9
-- 		 It will, more likely then not, recognise it.

-- ======== DROPPING ========

DROP TABLE coords;
DROP TABLE possible_characters;
DROP TABLE criteria;
DROP TYPE directions CASCADE;

-- ======== CREATING TABLE FOR EXEMPLE ========

-- The table with coordinates 
CREATE TABLE coords (
    cnt INT PRIMARY KEY,
    x INT,
    y INT
);

-- =================================== --
-- !!! REPLACE THIS LINE WITH YOURS!!! -- Exemplu initial: F
INSERT INTO coords VALUES (0, 131, 293), (1, 131, 290), (2, 131, 285), (3, 131, 279), (4, 130, 274), (5, 130, 270), (6, 130, 263), (7, 130, 256), (8, 130, 251), (9, 130, 244), (10, 130, 237), (11, 130, 232), (12, 130, 225), (13, 130, 220), (14, 130, 216), (15, 130, 210), (16, 130, 205), (17, 130, 198), (18, 130, 191), (19, 130, 186), (20, 129, 177), (21, 128, 171), (22, 127, 165), (23, 127, 158), (24, 126, 151), (25, 125, 146), (26, 124, 139), (27, 122, 132), (28, 121, 126), (29, 120, 121), (30, 119, 114), (31, 119, 111), (32, 118, 108), (33, 118, 103), (34, 117, 100), (35, 117, 98), (36, 116, 97), (37, 116, 96), (38, 116, 94), (39, 116, 93), (40, 116, 92), (41, 116, 91), (42, 116, 90), (43, 116, 89), (44, 116, 88), (45, 116, 87), (46, 116, 86), (47, 116, 85), (48, 116, 84), (49, 115, 84), (50, 115, 83), (51, 114, 83), (52, 114, 82), (53, 115, 82), (54, 117, 80), (55, 120, 79), (56, 125, 78), (57, 128, 78), (58, 133, 78), (59, 138, 78), (60, 142, 78), (61, 149, 78), (62, 152, 78), (63, 157, 78), (64, 161, 78), (65, 167, 79), (66, 171, 81), (67, 177, 81), (68, 181, 82), (69, 187, 83), (70, 192, 83), (71, 195, 83), (72, 198, 84), (73, 201, 84), (74, 202, 84), (75, 205, 84), (76, 206, 84), (77, 208, 84), (78, 209, 84), (79, 211, 84), (80, 212, 84), (81, 214, 84), (82, 215, 84), (83, 217, 84), (84, 218, 84), (85, 219, 84), (86, 221, 84), (87, 222, 84), (88, 223, 84), (89, 224, 84), (90, 226, 84), (91, 227, 84), (92, 228, 84), (93, 229, 84), (94, 230, 84), (95, 231, 84), (96, 232, 84), (97, 233, 84), (98, 234, 84), (99, 235, 84), (100, 236, 84), (101, 235, 84), (102, 234, 84), (103, 232, 84), (104, 230, 84), (105, 228, 84), (106, 225, 84), (107, 222, 84), (108, 220, 84), (109, 217, 84), (110, 215, 84), (111, 214, 84), (112, 212, 84), (113, 210, 84), (114, 209, 84), (115, 207, 84), (116, 204, 84), (117, 202, 84), (118, 200, 84), (119, 197, 84), (120, 193, 84), (121, 190, 84), (122, 187, 84), (123, 185, 84), (124, 183, 84), (125, 180, 83), (126, 178, 83), (127, 176, 83), (128, 174, 83), (129, 172, 83), (130, 171, 83), (131, 170, 83), (132, 169, 83), (133, 166, 83), (134, 165, 83), (135, 163, 83), (136, 162, 83), (137, 161, 83), (138, 160, 83), (139, 159, 83), (140, 158, 83), (141, 157, 83), (142, 156, 83), (143, 155, 83), (144, 154, 83), (145, 153, 83), (146, 152, 83), (147, 151, 83), (148, 150, 83), (149, 149, 83), (150, 147, 82), (151, 146, 82), (152, 145, 82), (153, 144, 81), (154, 143, 81), (155, 142, 81), (156, 141, 81), (157, 141, 80), (158, 140, 80), (159, 139, 80), (160, 138, 80), (161, 137, 80), (162, 136, 80), (163, 135, 80), (164, 134, 80), (165, 133, 80), (166, 132, 80), (167, 131, 80), (168, 130, 80), (169, 129, 80), (170, 128, 80), (171, 126, 80), (172, 125, 80), (173, 124, 80), (174, 123, 80), (175, 122, 80), (176, 122, 81), (177, 122, 82), (178, 122, 83), (179, 122, 84), (180, 122, 85), (181, 122, 87), (182, 122, 89), (183, 122, 90), (184, 122, 91), (185, 122, 92), (186, 122, 93), (187, 122, 95), (188, 122, 96), (189, 122, 97), (190, 122, 98), (191, 122, 100), (192, 122, 101), (193, 122, 102), (194, 122, 103), (195, 122, 104), (196, 122, 106), (197, 122, 107), (198, 122, 108), (199, 122, 110), (200, 122, 112), (201, 122, 113), (202, 123, 114), (203, 123, 115), (204, 123, 117), (205, 123, 119), (206, 123, 120), (207, 123, 121), (208, 124, 123), (209, 125, 125), (210, 125, 126), (211, 125, 128), (212, 125, 130), (213, 125, 132), (214, 125, 133), (215, 125, 134), (216, 125, 136), (217, 125, 137), (218, 125, 139), (219, 125, 140), (220, 125, 141), (221, 125, 142), (222, 125, 143), (223, 125, 144), (224, 125, 145), (225, 125, 147), (226, 125, 148), (227, 126, 149), (228, 126, 151), (229, 126, 152), (230, 126, 153), (231, 126, 154), (232, 128, 156), (233, 128, 158), (234, 128, 159), (235, 128, 160), (236, 128, 161), (237, 128, 163), (238, 128, 165), (239, 128, 166), (240, 128, 167), (241, 129, 168), (242, 129, 169), (243, 129, 171), (244, 129, 172), (245, 129, 173), (246, 129, 174), (247, 129, 175), (248, 129, 176), (249, 130, 176), (250, 131, 176), (251, 132, 176), (252, 133, 176), (253, 134, 176), (254, 135, 176), (255, 136, 176), (256, 139, 176), (257, 142, 175), (258, 144, 174), (259, 145, 174), (260, 147, 173), (261, 150, 172), (262, 155, 170), (263, 157, 170), (264, 159, 168), (265, 163, 167), (266, 167, 167), (267, 171, 166), (268, 174, 166), (269, 177, 165), (270, 180, 165), (271, 182, 165), (272, 183, 165), (273, 188, 165), (274, 190, 165), (275, 191, 165), (276, 194, 165), (277, 195, 165), (278, 196, 165), (279, 199, 165), (280, 201, 165), (281, 202, 165), (282, 203, 165), (283, 205, 165), (284, 207, 164), (285, 208, 164), (286, 209, 164), (287, 211, 164), (288, 212, 164), (289, 214, 164), (290, 215, 164), (291, 216, 164), (292, 217, 164), (293, 218, 164), (294, 219, 164), (295, 220, 164), (296, 221, 164), (297, 222, 164), (298, 223, 164), (299, 224, 164), (300, 225, 164), (301, 226, 164), (302, 227, 164), (303, 228, 164);
-- ==================================  --

-- 1
-- INSERT INTO coords VALUES (0, 186, 168), (1, 187, 167), (2, 188, 164), (3, 191, 161), (4, 194, 159), (5, 197, 154), (6, 200, 150), (7, 204, 146), (8, 206, 141), (9, 208, 138), (10, 211, 134), (11, 212, 131), (12, 214, 129), (13, 215, 126), (14, 215, 123), (15, 217, 121), (16, 218, 119), (17, 219, 117), (18, 220, 115), (19, 220, 114), (20, 220, 112), (21, 221, 112), (22, 221, 111), (23, 221, 113), (24, 220, 114), (25, 219, 119), (26, 217, 124), (27, 217, 128), (28, 216, 133), (29, 216, 140), (30, 216, 146), (31, 215, 153), (32, 215, 161), (33, 214, 166), (34, 213, 174), (35, 213, 182), (36, 212, 192), (37, 212, 199), (38, 212, 207), (39, 211, 212), (40, 210, 219), (41, 208, 227), (42, 207, 234), (43, 206, 242), (44, 206, 250), (45, 205, 257), (46, 204, 262), (47, 203, 267), (48, 203, 270), (49, 202, 273), (50, 201, 276), (51, 201, 278), (52, 201, 279), (53, 201, 280), (54, 199, 283), (55, 199, 284), (56, 198, 285), (57, 198, 287), (58, 198, 289), (59, 198, 290), (60, 198, 291), (61, 198, 292);
-- 7
-- INSERT INTO coords VALUES (0, 114, 90), (1, 118, 91), (2, 124, 91), (3, 129, 91), (4, 134, 91), (5, 137, 91), (6, 142, 91), (7, 147, 91), (8, 151, 91), (9, 154, 91), (10, 159, 92), (11, 162, 92), (12, 168, 93), (13, 171, 93), (14, 175, 93), (15, 177, 93), (16, 179, 93), (17, 183, 94), (18, 184, 94), (19, 190, 94), (20, 193, 94), (21, 197, 94), (22, 199, 94), (23, 201, 94), (24, 205, 94), (25, 208, 94), (26, 211, 93), (27, 214, 92), (28, 216, 92), (29, 218, 92), (30, 222, 91), (31, 223, 91), (32, 224, 91), (33, 225, 91), (34, 227, 91), (35, 228, 91), (36, 230, 91), (37, 231, 91), (38, 233, 91), (39, 236, 91), (40, 238, 91), (41, 241, 91), (42, 244, 91), (43, 246, 91), (44, 249, 91), (45, 250, 91), (46, 252, 92), (47, 255, 92), (48, 256, 92), (49, 257, 92), (50, 258, 92), (51, 259, 92), (52, 260, 92), (53, 261, 92), (54, 262, 92), (55, 263, 92), (56, 264, 92), (57, 266, 92), (58, 267, 92), (59, 269, 92), (60, 271, 92), (61, 272, 92), (62, 275, 91), (63, 278, 91), (64, 279, 91), (65, 283, 91), (66, 285, 91), (67, 287, 91), (68, 290, 91), (69, 292, 91), (70, 294, 91), (71, 296, 91), (72, 298, 91), (73, 299, 91), (74, 300, 91), (75, 302, 91), (76, 303, 92), (77, 305, 92), (78, 306, 92), (79, 307, 92), (80, 308, 92), (81, 309, 92), (82, 310, 92), (83, 310, 93), (84, 310, 94), (85, 310, 95), (86, 310, 96), (87, 309, 97), (88, 308, 98), (89, 307, 99), (90, 306, 100), (91, 305, 102), (92, 302, 109), (93, 301, 111), (94, 301, 113), (95, 299, 115), (96, 298, 117), (97, 298, 119), (98, 296, 120), (99, 296, 123), (100, 295, 126), (101, 294, 127), (102, 294, 129), (103, 292, 131), (104, 291, 134), (105, 290, 135), (106, 288, 137), (107, 288, 139), (108, 286, 142), (109, 284, 144), (110, 283, 146), (111, 281, 150), (112, 280, 152), (113, 279, 153), (114, 277, 157), (115, 275, 159), (116, 275, 161), (117, 273, 162), (118, 272, 166), (119, 271, 168), (120, 269, 169), (121, 268, 171), (122, 267, 174), (123, 267, 175), (124, 266, 176), (125, 265, 178), (126, 264, 181), (127, 262, 183), (128, 261, 185), (129, 261, 188), (130, 260, 191), (131, 259, 193), (132, 259, 196), (133, 258, 198), (134, 257, 199), (135, 255, 203), (136, 254, 206), (137, 253, 207), (138, 252, 210), (139, 251, 212), (140, 250, 214), (141, 249, 215), (142, 247, 218), (143, 244, 223), (144, 244, 226), (145, 243, 228), (146, 243, 231), (147, 242, 233), (148, 242, 234), (149, 241, 236), (150, 239, 238), (151, 239, 241), (152, 238, 243), (153, 237, 245), (154, 237, 248), (155, 237, 249), (156, 236, 250), (157, 235, 252), (158, 235, 254), (159, 234, 255), (160, 233, 256), (161, 232, 257), (162, 231, 258), (163, 231, 259), (164, 230, 262), (165, 229, 265), (166, 228, 267), (167, 228, 268), (168, 228, 269), (169, 228, 270), (170, 228, 271), (171, 228, 272), (172, 227, 273), (173, 227, 274), (174, 226, 275), (175, 226, 276), (176, 226, 277), (177, 225, 278), (178, 224, 281), (179, 224, 282), (180, 224, 284), (181, 223, 284), (182, 223, 286), (183, 223, 287), (184, 223, 288), (185, 222, 289), (186, 222, 290), (187, 221, 290), (188, 221, 291), (189, 220, 292), (190, 220, 293), (191, 219, 294), (192, 218, 296), (193, 218, 297), (194, 218, 299), (195, 217, 301), (196, 216, 302), (197, 216, 303), (198, 216, 304), (199, 216, 306), (200, 215, 307), (201, 215, 308), (202, 214, 309), (203, 213, 311), (204, 212, 314), (205, 212, 315), (206, 212, 316), (207, 211, 318), (208, 210, 320), (209, 210, 321), (210, 209, 323), (211, 209, 324), (212, 208, 325), (213, 208, 327), (214, 207, 328), (215, 206, 330), (216, 206, 331), (217, 205, 332), (218, 205, 334), (219, 205, 335), (220, 205, 336), (221, 204, 336), (222, 204, 337), (223, 204, 338), (224, 203, 338);
-- 2
-- INSERT INTO coords VALUES (0, 134, 174), (1, 135, 171), (2, 136, 167), (3, 138, 163), (4, 140, 159), (5, 146, 149), (6, 151, 140), (7, 154, 137), (8, 156, 134), (9, 158, 130), (10, 163, 127), (11, 166, 124), (12, 170, 121), (13, 174, 118), (14, 177, 115), (15, 183, 113), (16, 185, 112), (17, 190, 109), (18, 193, 108), (19, 196, 108), (20, 199, 108), (21, 210, 108), (22, 213, 108), (23, 217, 110), (24, 222, 112), (25, 227, 114), (26, 231, 116), (27, 234, 119), (28, 238, 121), (29, 239, 123), (30, 242, 126), (31, 245, 129), (32, 247, 131), (33, 249, 136), (34, 250, 138), (35, 251, 139), (36, 252, 141), (37, 252, 144), (38, 253, 147), (39, 253, 149), (40, 253, 153), (41, 253, 162), (42, 253, 165), (43, 253, 168), (44, 253, 171), (45, 253, 175), (46, 253, 179), (47, 253, 185), (48, 252, 188), (49, 251, 195), (50, 250, 199), (51, 249, 205), (52, 246, 210), (53, 244, 215), (54, 244, 219), (55, 242, 223), (56, 240, 228), (57, 237, 232), (58, 235, 236), (59, 226, 246), (60, 223, 250), (61, 218, 254), (62, 214, 258), (63, 212, 261), (64, 207, 265), (65, 204, 269), (66, 200, 273), (67, 197, 275), (68, 193, 280), (69, 190, 282), (70, 188, 285), (71, 185, 288), (72, 180, 291), (73, 178, 292), (74, 176, 295), (75, 171, 298), (76, 168, 301), (77, 163, 305), (78, 161, 306), (79, 159, 308), (80, 156, 309), (81, 155, 310), (82, 154, 312), (83, 152, 313), (84, 152, 314), (85, 151, 314), (86, 150, 315), (87, 149, 315), (88, 149, 316), (89, 148, 316), (90, 148, 317), (91, 154, 317), (92, 157, 316), (93, 161, 316), (94, 165, 315), (95, 172, 315), (96, 176, 315), (97, 183, 314), (98, 190, 314), (99, 204, 313), (100, 212, 313), (101, 219, 313), (102, 226, 313), (103, 233, 312), (104, 238, 312), (105, 241, 311), (106, 247, 311), (107, 255, 310), (108, 259, 310), (109, 261, 310), (110, 264, 309), (111, 266, 308), (112, 268, 308), (113, 269, 308), (114, 269, 307), (115, 271, 307), (116, 272, 307);
-- Z
-- INSERT INTO coords VALUES (0, 129, 118), (1, 133, 118), (2, 140, 118), (3, 147, 117), (4, 154, 116), (5, 166, 115), (6, 179, 114), (7, 187, 113), (8, 210, 110), (9, 219, 108), (10, 230, 106), (11, 241, 105), (12, 248, 105), (13, 255, 104), (14, 275, 101), (15, 278, 101), (16, 281, 100), (17, 284, 100), (18, 285, 100), (19, 286, 100), (20, 287, 100), (21, 288, 100), (22, 287, 100), (23, 286, 101), (24, 284, 103), (25, 279, 106), (26, 259, 128), (27, 251, 137), (28, 244, 144), (29, 236, 152), (30, 229, 159), (31, 210, 181), (32, 203, 190), (33, 197, 199), (34, 192, 206), (35, 187, 211), (36, 180, 218), (37, 174, 222), (38, 169, 228), (39, 167, 232), (40, 162, 237), (41, 160, 239), (42, 158, 243), (43, 156, 248), (44, 153, 252), (45, 152, 255), (46, 152, 257), (47, 151, 260), (48, 151, 261), (49, 150, 262), (50, 150, 263), (51, 153, 263), (52, 156, 263), (53, 163, 263), (54, 171, 263), (55, 179, 263), (56, 187, 263), (57, 199, 263), (58, 213, 264), (59, 227, 264), (60, 238, 264), (61, 272, 265), (62, 285, 268), (63, 297, 268), (64, 307, 269), (65, 316, 269), (66, 323, 270), (67, 328, 270), (68, 333, 270), (69, 337, 270), (70, 341, 270), (71, 342, 270), (72, 343, 270), (73, 344, 270);
-- 6
-- INSERT INTO coords VALUES (0, 257, 139), (1, 257, 135), (2, 256, 130), (3, 255, 127), (4, 254, 122), (5, 254, 119), (6, 252, 117), (7, 251, 115), (8, 250, 113), (9, 249, 112), (10, 248, 111), (11, 244, 107), (12, 240, 105), (13, 235, 103), (14, 228, 101), (15, 222, 98), (16, 216, 96), (17, 212, 94), (18, 209, 93), (19, 204, 91), (20, 201, 91), (21, 198, 91), (22, 194, 90), (23, 191, 90), (24, 187, 90), (25, 185, 90), (26, 183, 90), (27, 180, 90), (28, 177, 90), (29, 175, 91), (30, 172, 92), (31, 171, 92), (32, 169, 94), (33, 167, 95), (34, 165, 99), (35, 163, 100), (36, 162, 102), (37, 160, 105), (38, 160, 107), (39, 158, 108), (40, 157, 110), (41, 156, 113), (42, 154, 117), (43, 154, 120), (44, 153, 123), (45, 152, 129), (46, 150, 133), (47, 149, 137), (48, 148, 142), (49, 147, 146), (50, 147, 152), (51, 147, 158), (52, 147, 165), (53, 148, 171), (54, 149, 179), (55, 149, 186), (56, 151, 193), (57, 152, 197), (58, 153, 203), (59, 154, 208), (60, 155, 214), (61, 156, 219), (62, 157, 225), (63, 158, 232), (64, 159, 236), (65, 161, 242), (66, 162, 246), (67, 164, 252), (68, 164, 256), (69, 167, 264), (70, 169, 267), (71, 173, 273), (72, 175, 276), (73, 178, 281), (74, 180, 283), (75, 181, 285), (76, 184, 288), (77, 185, 289), (78, 188, 289), (79, 190, 290), (80, 192, 291), (81, 195, 291), (82, 197, 291), (83, 198, 291), (84, 200, 291), (85, 204, 291), (86, 208, 290), (87, 212, 288), (88, 215, 287), (89, 221, 283), (90, 225, 281), (91, 231, 278), (92, 233, 275), (93, 236, 273), (94, 239, 271), (95, 241, 269), (96, 242, 267), (97, 243, 266), (98, 244, 265), (99, 246, 264), (100, 246, 262), (101, 247, 261), (102, 248, 260), (103, 248, 259), (104, 249, 258), (105, 249, 257), (106, 250, 256), (107, 252, 253), (108, 252, 251), (109, 253, 249), (110, 254, 244), (111, 254, 242), (112, 255, 238), (113, 255, 235), (114, 255, 233), (115, 255, 230), (116, 255, 228), (117, 254, 227), (118, 254, 224), (119, 253, 222), (120, 251, 221), (121, 240, 210), (122, 237, 208), (123, 232, 206), (124, 229, 203), (125, 225, 201), (126, 222, 200), (127, 220, 199), (128, 218, 198), (129, 215, 198), (130, 214, 198), (131, 213, 196), (132, 212, 196), (133, 211, 196), (134, 209, 196), (135, 208, 196), (136, 207, 196), (137, 206, 196), (138, 204, 196), (139, 202, 196), (140, 200, 196), (141, 198, 196), (142, 195, 196), (143, 192, 197), (144, 190, 197), (145, 188, 198), (146, 186, 199), (147, 184, 200), (148, 180, 202), (149, 179, 202), (150, 177, 205), (151, 176, 205), (152, 174, 207), (153, 173, 208), (154, 172, 209), (155, 171, 211), (156, 170, 211), (157, 170, 212), (158, 168, 213), (159, 167, 215), (160, 166, 216), (161, 166, 218), (162, 165, 219), (163, 164, 220), (164, 164, 221), (165, 163, 223), (166, 163, 226), (167, 162, 227), (168, 162, 228), (169, 160, 229), (170, 160, 230), (171, 160, 232), (172, 159, 233), (173, 159, 234), (174, 159, 235), (175, 159, 236);
-- G
-- INSERT INTO coords VALUES (0, 272, 120), (1, 270, 118), (2, 266, 115), (3, 261, 110), (4, 258, 107), (5, 253, 103), (6, 249, 100), (7, 245, 97), (8, 242, 95), (9, 239, 92), (10, 234, 89), (11, 232, 88), (12, 228, 87), (13, 224, 84), (14, 219, 83), (15, 215, 82), (16, 209, 82), (17, 206, 82), (18, 202, 81), (19, 199, 81), (20, 197, 81), (21, 194, 81), (22, 192, 81), (23, 189, 81), (24, 186, 81), (25, 183, 81), (26, 177, 81), (27, 174, 81), (28, 169, 82), (29, 164, 83), (30, 158, 86), (31, 155, 88), (32, 151, 90), (33, 147, 92), (34, 144, 96), (35, 140, 98), (36, 137, 103), (37, 134, 106), (38, 131, 108), (39, 128, 111), (40, 123, 114), (41, 121, 117), (42, 119, 119), (43, 114, 121), (44, 112, 123), (45, 110, 125), (46, 108, 127), (47, 106, 129), (48, 104, 133), (49, 103, 135), (50, 101, 138), (51, 100, 140), (52, 100, 143), (53, 99, 146), (54, 99, 148), (55, 99, 151), (56, 99, 154), (57, 99, 157), (58, 99, 160), (59, 99, 163), (60, 99, 170), (61, 99, 175), (62, 99, 178), (63, 99, 183), (64, 100, 189), (65, 100, 194), (66, 102, 199), (67, 102, 204), (68, 103, 207), (69, 103, 213), (70, 104, 218), (71, 105, 223), (72, 105, 226), (73, 105, 231), (74, 106, 234), (75, 106, 238), (76, 108, 241), (77, 109, 244), (78, 110, 246), (79, 112, 248), (80, 112, 251), (81, 114, 253), (82, 115, 256), (83, 119, 258), (84, 121, 263), (85, 124, 266), (86, 126, 270), (87, 129, 273), (88, 131, 275), (89, 133, 279), (90, 137, 281), (91, 138, 284), (92, 140, 287), (93, 142, 288), (94, 144, 290), (95, 147, 291), (96, 150, 295), (97, 156, 297), (98, 159, 297), (99, 163, 298), (100, 166, 299), (101, 169, 300), (102, 173, 301), (103, 175, 302), (104, 178, 303), (105, 179, 304), (106, 186, 306), (107, 188, 307), (108, 189, 308), (109, 191, 309), (110, 194, 310), (111, 195, 310), (112, 196, 311), (113, 200, 311), (114, 202, 311), (115, 204, 311), (116, 207, 311), (117, 208, 311), (118, 210, 311), (119, 212, 311), (120, 215, 311), (121, 216, 311), (122, 217, 310), (123, 219, 309), (124, 221, 308), (125, 222, 307), (126, 224, 307), (127, 226, 305), (128, 230, 303), (129, 232, 300), (130, 234, 299), (131, 240, 295), (132, 243, 293), (133, 246, 291), (134, 247, 291), (135, 249, 289), (136, 250, 287), (137, 251, 285), (138, 253, 283), (139, 254, 280), (140, 255, 277), (141, 255, 276), (142, 256, 274), (143, 257, 272), (144, 257, 270), (145, 258, 268), (146, 258, 267), (147, 259, 266), (148, 259, 264), (149, 260, 263), (150, 260, 262), (151, 261, 261), (152, 261, 260), (153, 261, 259), (154, 262, 257), (155, 262, 256), (156, 263, 255), (157, 263, 253), (158, 265, 252), (159, 265, 250), (160, 265, 249), (161, 266, 246), (162, 267, 243), (163, 268, 241), (164, 268, 240), (165, 268, 238), (166, 269, 235), (167, 270, 233), (168, 270, 232), (169, 270, 231), (170, 270, 229), (171, 270, 228), (172, 270, 227), (173, 272, 226), (174, 272, 225), (175, 272, 223), (176, 272, 222), (177, 273, 220), (178, 273, 219), (179, 273, 218), (180, 273, 217), (181, 273, 216), (182, 274, 215), (183, 274, 214), (184, 274, 213), (185, 273, 213), (186, 271, 213), (187, 270, 213), (188, 269, 213), (189, 267, 213), (190, 266, 213), (191, 265, 213), (192, 264, 213), (193, 263, 213), (194, 262, 213), (195, 261, 213), (196, 260, 213), (197, 257, 213), (198, 255, 213), (199, 253, 213), (200, 250, 213), (201, 248, 213), (202, 245, 213), (203, 244, 213), (204, 242, 213), (205, 241, 213), (206, 240, 213), (207, 238, 213), (208, 237, 213), (209, 236, 213), (210, 235, 213), (211, 234, 214), (212, 233, 214), (213, 232, 214), (214, 231, 214), (215, 230, 214), (216, 229, 214), (217, 228, 214), (218, 227, 214), (219, 226, 214), (220, 225, 214), (221, 222, 214), (222, 221, 214), (223, 219, 214), (224, 217, 214), (225, 214, 214), (226, 212, 214), (227, 211, 214), (228, 210, 214), (229, 207, 214), (230, 206, 214), (231, 205, 214);
-- X
-- INSERT INTO coords VALUES (0, 129, 91), (1, 131, 96), (2, 135, 103), (3, 140, 110), (4, 147, 115), (5, 153, 123), (6, 159, 130), (7, 164, 136), (8, 170, 144), (9, 174, 151), (10, 178, 156), (11, 183, 162), (12, 187, 168), (13, 194, 175), (14, 201, 183), (15, 206, 190), (16, 212, 199), (17, 218, 206), (18, 223, 214), (19, 226, 220), (20, 229, 225), (21, 233, 230), (22, 237, 243), (23, 239, 246), (24, 239, 248), (25, 239, 249), (26, 240, 250), (27, 240, 252), (28, 241, 252), (29, 241, 254), (30, 242, 254), (31, 242, 256), (32, 243, 258), (33, 243, 260), (34, 243, 262), (35, 244, 263), (36, 244, 264), (37, 244, 265), (38, 243, 265), (39, 240, 265), (40, 238, 264), (41, 228, 262), (42, 221, 260), (43, 215, 258), (44, 208, 255), (45, 204, 254), (46, 197, 252), (47, 191, 250), (48, 187, 249), (49, 181, 248), (50, 176, 247), (51, 169, 245), (52, 161, 244), (53, 156, 242), (54, 150, 242), (55, 145, 241), (56, 142, 241), (57, 138, 240), (58, 136, 240), (59, 133, 240), (60, 130, 240), (61, 128, 240), (62, 125, 240), (63, 122, 240), (64, 120, 240), (65, 119, 240), (66, 117, 240), (67, 116, 240), (68, 115, 240), (69, 114, 240), (70, 113, 240), (71, 113, 241), (72, 112, 241), (73, 110, 241), (74, 110, 242), (75, 109, 242), (76, 108, 242), (77, 108, 241), (78, 109, 240), (79, 111, 237), (80, 115, 233), (81, 119, 229), (82, 124, 223), (83, 129, 215), (84, 136, 207), (85, 142, 197), (86, 148, 188), (87, 154, 178), (88, 163, 168), (89, 172, 158), (90, 182, 145), (91, 191, 135), (92, 199, 125), (93, 205, 117), (94, 213, 107), (95, 220, 101), (96, 228, 92), (97, 234, 87), (98, 241, 81), (99, 245, 76), (100, 249, 73), (101, 252, 70), (102, 255, 68), (103, 256, 64), (104, 259, 63), (105, 260, 62), (106, 261, 61), (107, 261, 60), (108, 262, 60), (109, 262, 58);
-- F
-- INSERT INTO coords VALUES (0, 155, 287), (1, 155, 277), (2, 155, 265), (3, 155, 253), (4, 155, 240), (5, 155, 222), (6, 156, 208), (7, 156, 195), (8, 157, 182), (9, 157, 167), (10, 158, 155), (11, 158, 146), (12, 159, 137), (13, 159, 131), (14, 159, 127), (15, 159, 123), (16, 159, 122), (17, 159, 120), (18, 159, 119), (19, 160, 119), (20, 160, 118), (21, 163, 117), (22, 166, 116), (23, 170, 115), (24, 177, 115), (25, 185, 115), (26, 192, 115), (27, 200, 115), (28, 210, 115), (29, 224, 116), (30, 235, 117), (31, 243, 120), (32, 252, 121), (33, 262, 122), (34, 271, 123), (35, 279, 124), (36, 288, 125), (37, 293, 126), (38, 300, 127), (39, 303, 128), (40, 306, 128), (41, 308, 129), (42, 311, 129), (43, 312, 129), (44, 313, 129);
-- INSERT INTO coords VALUES (0, 131, 293), (1, 131, 290), (2, 131, 285), (3, 131, 279), (4, 130, 274), (5, 130, 270), (6, 130, 263), (7, 130, 256), (8, 130, 251), (9, 130, 244), (10, 130, 237), (11, 130, 232), (12, 130, 225), (13, 130, 220), (14, 130, 216), (15, 130, 210), (16, 130, 205), (17, 130, 198), (18, 130, 191), (19, 130, 186), (20, 129, 177), (21, 128, 171), (22, 127, 165), (23, 127, 158), (24, 126, 151), (25, 125, 146), (26, 124, 139), (27, 122, 132), (28, 121, 126), (29, 120, 121), (30, 119, 114), (31, 119, 111), (32, 118, 108), (33, 118, 103), (34, 117, 100), (35, 117, 98), (36, 116, 97), (37, 116, 96), (38, 116, 94), (39, 116, 93), (40, 116, 92), (41, 116, 91), (42, 116, 90), (43, 116, 89), (44, 116, 88), (45, 116, 87), (46, 116, 86), (47, 116, 85), (48, 116, 84), (49, 115, 84), (50, 115, 83), (51, 114, 83), (52, 114, 82), (53, 115, 82), (54, 117, 80), (55, 120, 79), (56, 125, 78), (57, 128, 78), (58, 133, 78), (59, 138, 78), (60, 142, 78), (61, 149, 78), (62, 152, 78), (63, 157, 78), (64, 161, 78), (65, 167, 79), (66, 171, 81), (67, 177, 81), (68, 181, 82), (69, 187, 83), (70, 192, 83), (71, 195, 83), (72, 198, 84), (73, 201, 84), (74, 202, 84), (75, 205, 84), (76, 206, 84), (77, 208, 84), (78, 209, 84), (79, 211, 84), (80, 212, 84), (81, 214, 84), (82, 215, 84), (83, 217, 84), (84, 218, 84), (85, 219, 84), (86, 221, 84), (87, 222, 84), (88, 223, 84), (89, 224, 84), (90, 226, 84), (91, 227, 84), (92, 228, 84), (93, 229, 84), (94, 230, 84), (95, 231, 84), (96, 232, 84), (97, 233, 84), (98, 234, 84), (99, 235, 84), (100, 236, 84), (101, 235, 84), (102, 234, 84), (103, 232, 84), (104, 230, 84), (105, 228, 84), (106, 225, 84), (107, 222, 84), (108, 220, 84), (109, 217, 84), (110, 215, 84), (111, 214, 84), (112, 212, 84), (113, 210, 84), (114, 209, 84), (115, 207, 84), (116, 204, 84), (117, 202, 84), (118, 200, 84), (119, 197, 84), (120, 193, 84), (121, 190, 84), (122, 187, 84), (123, 185, 84), (124, 183, 84), (125, 180, 83), (126, 178, 83), (127, 176, 83), (128, 174, 83), (129, 172, 83), (130, 171, 83), (131, 170, 83), (132, 169, 83), (133, 166, 83), (134, 165, 83), (135, 163, 83), (136, 162, 83), (137, 161, 83), (138, 160, 83), (139, 159, 83), (140, 158, 83), (141, 157, 83), (142, 156, 83), (143, 155, 83), (144, 154, 83), (145, 153, 83), (146, 152, 83), (147, 151, 83), (148, 150, 83), (149, 149, 83), (150, 147, 82), (151, 146, 82), (152, 145, 82), (153, 144, 81), (154, 143, 81), (155, 142, 81), (156, 141, 81), (157, 141, 80), (158, 140, 80), (159, 139, 80), (160, 138, 80), (161, 137, 80), (162, 136, 80), (163, 135, 80), (164, 134, 80), (165, 133, 80), (166, 132, 80), (167, 131, 80), (168, 130, 80), (169, 129, 80), (170, 128, 80), (171, 126, 80), (172, 125, 80), (173, 124, 80), (174, 123, 80), (175, 122, 80), (176, 122, 81), (177, 122, 82), (178, 122, 83), (179, 122, 84), (180, 122, 85), (181, 122, 87), (182, 122, 89), (183, 122, 90), (184, 122, 91), (185, 122, 92), (186, 122, 93), (187, 122, 95), (188, 122, 96), (189, 122, 97), (190, 122, 98), (191, 122, 100), (192, 122, 101), (193, 122, 102), (194, 122, 103), (195, 122, 104), (196, 122, 106), (197, 122, 107), (198, 122, 108), (199, 122, 110), (200, 122, 112), (201, 122, 113), (202, 123, 114), (203, 123, 115), (204, 123, 117), (205, 123, 119), (206, 123, 120), (207, 123, 121), (208, 124, 123), (209, 125, 125), (210, 125, 126), (211, 125, 128), (212, 125, 130), (213, 125, 132), (214, 125, 133), (215, 125, 134), (216, 125, 136), (217, 125, 137), (218, 125, 139), (219, 125, 140), (220, 125, 141), (221, 125, 142), (222, 125, 143), (223, 125, 144), (224, 125, 145), (225, 125, 147), (226, 125, 148), (227, 126, 149), (228, 126, 151), (229, 126, 152), (230, 126, 153), (231, 126, 154), (232, 128, 156), (233, 128, 158), (234, 128, 159), (235, 128, 160), (236, 128, 161), (237, 128, 163), (238, 128, 165), (239, 128, 166), (240, 128, 167), (241, 129, 168), (242, 129, 169), (243, 129, 171), (244, 129, 172), (245, 129, 173), (246, 129, 174), (247, 129, 175), (248, 129, 176), (249, 130, 176), (250, 131, 176), (251, 132, 176), (252, 133, 176), (253, 134, 176), (254, 135, 176), (255, 136, 176), (256, 139, 176), (257, 142, 175), (258, 144, 174), (259, 145, 174), (260, 147, 173), (261, 150, 172), (262, 155, 170), (263, 157, 170), (264, 159, 168), (265, 163, 167), (266, 167, 167), (267, 171, 166), (268, 174, 166), (269, 177, 165), (270, 180, 165), (271, 182, 165), (272, 183, 165), (273, 188, 165), (274, 190, 165), (275, 191, 165), (276, 194, 165), (277, 195, 165), (278, 196, 165), (279, 199, 165), (280, 201, 165), (281, 202, 165), (282, 203, 165), (283, 205, 165), (284, 207, 164), (285, 208, 164), (286, 209, 164), (287, 211, 164), (288, 212, 164), (289, 214, 164), (290, 215, 164), (291, 216, 164), (292, 217, 164), (293, 218, 164), (294, 219, 164), (295, 220, 164), (296, 221, 164), (297, 222, 164), (298, 223, 164), (299, 224, 164), (300, 225, 164), (301, 226, 164), (302, 227, 164), (303, 228, 164);
-- K
-- INSERT INTO coords VALUES (0, 98, 164), (1, 98, 170), (2, 100, 178), (3, 101, 187), (4, 104, 197), (5, 105, 208), (6, 108, 219), (7, 109, 229), (8, 110, 238), (9, 111, 247), (10, 112, 254), (11, 112, 263), (12, 113, 271), (13, 113, 281), (14, 114, 289), (15, 114, 296), (16, 114, 302), (17, 114, 317), (18, 114, 322), (19, 114, 326), (20, 114, 329), (21, 114, 331), (22, 114, 332), (23, 114, 333), (24, 116, 330), (25, 117, 327), (26, 119, 321), (27, 123, 318), (28, 126, 309), (29, 129, 303), (30, 133, 295), (31, 136, 289), (32, 139, 282), (33, 143, 276), (34, 146, 267), (35, 148, 260), (36, 151, 252), (37, 155, 246), (38, 157, 238), (39, 160, 231), (40, 164, 225), (41, 169, 216), (42, 174, 209), (43, 178, 200), (44, 182, 194), (45, 186, 188), (46, 190, 185), (47, 194, 180), (48, 196, 176), (49, 198, 174), (50, 199, 172), (51, 202, 170), (52, 202, 169), (53, 203, 168), (54, 204, 166), (55, 205, 166), (56, 205, 165), (57, 205, 166), (58, 204, 171), (59, 203, 174), (60, 203, 177), (61, 203, 181), (62, 201, 185), (63, 200, 190), (64, 199, 196), (65, 199, 201), (66, 198, 206), (67, 196, 212), (68, 195, 216), (69, 193, 221), (70, 192, 225), (71, 191, 230), (72, 190, 234), (73, 189, 237), (74, 188, 243), (75, 188, 247), (76, 187, 251), (77, 187, 254), (78, 186, 258), (79, 186, 260), (80, 186, 263), (81, 186, 266), (82, 185, 267), (83, 185, 268), (84, 185, 269), (85, 184, 270), (86, 184, 271), (87, 183, 273), (88, 183, 274), (89, 183, 275), (90, 183, 276), (91, 182, 278), (92, 182, 279), (93, 182, 281), (94, 182, 282), (95, 182, 285), (96, 182, 286), (97, 182, 288), (98, 182, 289), (99, 182, 290), (100, 182, 291), (101, 182, 293), (102, 182, 296), (103, 182, 297), (104, 182, 299), (105, 182, 300), (106, 182, 301), (107, 182, 302), (108, 182, 303), (109, 182, 302);

-- ==================== ENUM TYPE ====================

CREATE TYPE directions AS ENUM('R', 'U', 'L', 'D');

-- ==================== SQL FUNCTIONS ====================

-- Function to calculate angle
CREATE OR REPLACE FUNCTION angle(alpha DOUBLE PRECISION, 
									beta DOUBLE PRECISION)
RETURNS DOUBLE PRECISION AS $$
    SELECT CAST(round(
        ((alpha - beta + 180.0)
		- 360.0 * floor((alpha - beta + 180.0)
		/ 360.0))::NUMERIC, 3
    ) AS DOUBLE PRECISION);
$$ LANGUAGE SQL IMMUTABLE;

-- Function to calculate grid position
CREATE OR REPLACE FUNCTION grid_position
	(width REAL, height REAL, xmin REAL, ymin REAL, x REAL, y REAL)
RETURNS INT AS $$
    SELECT GREATEST(0, 
           (3 - (FLOOR(4 * (x - xmin) / (width + 1)) :: INT))
           + 4 * (FLOOR(4 * (y - ymin) / (height + 1)) :: INT)
    );
$$ LANGUAGE SQL IMMUTABLE;

-- Function to convert directions to integers
CREATE OR REPLACE FUNCTION direction_to_integer(dir directions)
RETURNS INTEGER AS $$
    SELECT CASE dir
        WHEN 'R' THEN 0
        WHEN 'U' THEN 90
        WHEN 'L' THEN 180
        WHEN 'D' THEN 270
        ELSE NULL
    END;
$$ LANGUAGE sql IMMUTABLE;

-- ============= CHARACTER SELECTION TABLES ===========
-- This data from these two tables is obtained and improved from:
-- github.com/doersino/handwriting/blob/master/code/handwriting_setup.sql

-- Table with information about character first 4 or less directions
CREATE TABLE possible_characters (
    first_four_directions directions[],
    candidate_characters CHAR[]
);

INSERT INTO possible_characters VALUES
  ('{"D"}',             '{"I"}'),
  ('{"D","L"}',         '{"J"}'),
  ('{"D","L","U"}',     '{"O","J","X","U"}'),
  ('{"D","L","U","R"}', '{"X","O","U"}'),
  ('{"D","L","R"}',     '{"X"}'),
  ('{"D","L","R","U"}', '{"X"}'),
  ('{"D","R"}',         '{"L"}'),
  ('{"D","R","L"}',     '{"6"}'),
  ('{"D","R","L","D"}', '{"4"}'),
  ('{"D","R","U"}',     '{"O","U"}'),
  ('{"D","R","U","D"}', '{"4","Y"}'),
  ('{"D","R","U","L"}', '{"6","8","O","D","4"}'),
  ('{"D","R","U","R"}', '{"8"}'),
  ('{"D","U"}',         '{"V","U"}'),
  ('{"D","U","D"}',     '{"K"}'),
  ('{"D","U","D","U"}', '{"W"}'),
  ('{"D","U","D","R"}', '{"W","K"}'),
  ('{"D","U","R","D"}', '{"H"}'),
  ('{"D","U","R","L"}', '{"K"}'),
  ('{"L","D"}',         '{"F"}'),
  ('{"L","D","L"}',     '{"S"}'),
  ('{"L","D","L","D"}', '{"E"}'),
  ('{"L","D","R","L"}', '{"E","6"}'),
  ('{"L","R","D"}',     '{"T","4"}'),
  ('{"L","R","D","L"}', '{"S","8"}'),
  ('{"L","R","D","R"}', '{"E"}'),
  ('{"L","R","L"}',     '{"S"}'),
  ('{"L","R","L","D"}', '{"E"}'),
  ('{"L","R","L","R"}', '{"E"}'),
  ('{"L","D","U","R"}', '{"F"}'),
  ('{"L","D","R"}',     '{"C"}'),
  ('{"L","D","R","D"}', '{"5","8","S","E"}'),
  ('{"L","D","R","U"}', '{"6","O","C","G","9"}'),
  ('{"L","U","R","D"}', '{"9","8","Q"}'),
  ('{"L","U","D"}',     '{"4"}'),
  ('{"R","L","D"}',     '{"7"}'),
  ('{"R","L","D","R"}', '{"3","2","Z"}'),
  ('{"R","L","R","L"}', '{"3"}'),
  ('{"R","L","R"}',     '{"2","Z"}'),
  ('{"R","L","R","D"}', '{"3"}'),
  ('{"R","D"}',         '{"7","1"}'),
  ('{"R","D","L"}',     '{"7","3"}'),
  ('{"R","D","L","D"}', '{"2","3"}'),
  ('{"R","D","L","U"}', '{"O","2","3","U","X"}'),
  ('{"R","D","R","D"}', '{"3"}'),
  ('{"R","D","R"}',     '{"2","Z"}'),
  ('{"R","D","L","R"}', '{"3","2","Z"}'),
  ('{"R","U","L","D"}', '{"9","O"}'),
  ('{"R","U","L","R"}', '{"9","O"}'),
  ('{"U"}',             '{"I"}'),
  ('{"U","D"}',         '{"1","A"}'),
  ('{"U","D","L"}',     '{"A"}'),
  ('{"U","D","L","U"}', '{"A"}'),
  ('{"U","D","R"}',     '{"2"}'),
  ('{"U","D","U"}',     '{"N","A"}'),
  ('{"U","D","U","L"}', '{"A"}'),
  ('{"U","D","U","D"}', '{"M","N"}'),
  ('{"U","D","U","R"}', '{"M","N"}'),
  ('{"U","D","R","U"}', '{"M","N"}'),
  ('{"U","D","R","D"}', '{"M","N"}'),
  ('{"U","R","U"}',     '{"M","N"}'),
  ('{"U","R","U","D"}', '{"M","N"}'),
  ('{"U","R","D"}',     '{"D"}'),
  ('{"U","R","D","U"}', '{"M","N","A"}'),
  ('{"U","L","D","R"}', '{"8","9","C","G","S","6"}'),
  ('{"U","L","R"}',     '{"T"}'),
  ('{"U","R","D","R"}', '{"2","3","8","B","D","P","R"}'),
  ('{"U","R","D","L"}', '{"2","3","8","B","D","P","R"}'),
  ('{"U","R","L","R"}', '{"B"}'),
  ('{"U","R"}',         '{"F"}'),
  ('{"U","R","L"}',     '{"D"}'),
  ('{"U","R","L","D"}', '{"F"}');

-- Table to narrow down options based on some criteria
CREATE TABLE criteria (
    candidate_characters CHAR[],
    character CHAR,
    start INT,
    finish INT,
    corners INT[],
    start_finish INT,
    aspect_range NUMRANGE
);

INSERT INTO criteria VALUES
  ('{2}','2', NULL, NULL, NULL, NULL, NULL),
  ('{3}','3', NULL, NULL, NULL, NULL, NULL),
  ('{4}','4', NULL, NULL, NULL, NULL, NULL),
  ('{6}','6', NULL, NULL, NULL, NULL, NULL),
  ('{7}','7', NULL, NULL, NULL, NULL, NULL),
  ('{8}','8', NULL, NULL, NULL, NULL, NULL),
  ('{A}','A', NULL, NULL, NULL, NULL, NULL),
  ('{B}','B', NULL, NULL, NULL, NULL, NULL),
  ('{C}','C', NULL, NULL, NULL, NULL, NULL),
  ('{D}','D', NULL, NULL, NULL, NULL, NULL),
  ('{E}','E', NULL, NULL, NULL, NULL, NULL),
  ('{F}','F', NULL, NULL, NULL, NULL, NULL),
  ('{H}','H', NULL, NULL, NULL, NULL, NULL),
  ('{I}','I', NULL, NULL, NULL, NULL, NULL),
  ('{J}','J', NULL, NULL, NULL, NULL, NULL),
  ('{K}','K', NULL, NULL, NULL, NULL, NULL),
  ('{L}','L', NULL, NULL, NULL, NULL, NULL),
  ('{S}','S', NULL, NULL, NULL, NULL, NULL),
  ('{T}','T', NULL, NULL, NULL, NULL, NULL),
  ('{W}','W', NULL, NULL, NULL, NULL, NULL),
  ('{X}','X', NULL, NULL, NULL, NULL, NULL),
  ('{"O","J","X","U"}', 'O', 0, 0, NULL, NULL, NULL),
  ('{"O","J","X","U"}', 'O', 1, 1, NULL, NULL, NULL),
  ('{"O","J","X","U"}', 'O', 2, 2, NULL, NULL, NULL),
  ('{"O","J","X","U"}', 'O', 3, 3, NULL, NULL, NULL),
  ('{"O","J","X","U"}', 'J', NULL, 11, NULL, NULL, NULL),
  ('{"O","J","X","U"}', 'J', NULL, 15, NULL, NULL, NULL),
  ('{"O","J","X","U"}', 'X', 3, 0, '{12,15}', NULL, NULL),
  ('{"O","J","X","U"}', 'X', 3, 0, '{12}', NULL, NULL),
  ('{"O","J","X","U"}', 'X', 3, 0, '{15}', NULL, NULL),
  ('{"O","J","X","U"}', 'U', 0, 3, NULL, NULL, NULL),
  ('{"X","O","U"}', 'X', 3, 0, '{12,15}', NULL, NULL),
  ('{"X","O","U"}', 'X', 3, 0, '{12}', NULL, NULL),
  ('{"X","O","U"}', 'X', 3, 0, '{15}', NULL, NULL),
  ('{"X","O","U"}', 'O', 0, 0, NULL, NULL, NULL),
  ('{"X","O","U"}', 'O', 1, 1, NULL, NULL, NULL),
  ('{"X","O","U"}', 'O', 2, 2, NULL, NULL, NULL),
  ('{"X","O","U"}', 'O', 3, 3, NULL, NULL, NULL),
  ('{"X","O","U"}', 'O', 8, 8, NULL, NULL, NULL),
  ('{"X","O","U"}', 'U', 0, 3, NULL, NULL, NULL),
  ('{"O","U"}', 'O', 0, 0, NULL, NULL, NULL),
  ('{"O","U"}', 'O', 1, 1, NULL, NULL, NULL),
  ('{"O","U"}', 'O', 2, 2, NULL, NULL, NULL),
  ('{"O","U"}', 'O', 3, 3, NULL, NULL, NULL),
  ('{"O","U"}', 'U', 3, 0, NULL, NULL, NULL),
  ('{"O","U"}', 'U', 3, 4, NULL, NULL, NULL),
  ('{"O","U"}', 'U', 7, 0, NULL, NULL, NULL),
  ('{"4","Y"}', '4', NULL, 12, NULL, NULL, NULL),
  ('{"4","Y"}', '4', NULL, 13, NULL, NULL, NULL),
  ('{"4","Y"}', 'Y', NULL, 14, NULL, NULL, NULL),
  ('{"4","Y"}', 'Y', NULL, 15, NULL, NULL, NULL),
  ('{"4","Y"}', 'Y', NULL, 11, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', '6', 0, 6, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', '6', 0, 7, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', '6', 0, 11, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', '6', 1, 6, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', '6', 1, 7, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', '6', 1, 11, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', '8', 5, 5, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', '8', 6, 6, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', '8', 9, 9, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', '8', 10, 10, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', 'O', 0, 0, '{}', NULL, NULL),
  ('{"6","8","O","D","4"}', 'O', 1, 1, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', 'O', 2, 2, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', 'O', 3, 3, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', 'O', 7, 7, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', 'O', 11, 11, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', 'O', 11, 7, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', 'O', 7, 11, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', 'D', 0, 0, '{15}', NULL, NULL),
  ('{"6","8","O","D","4"}', '4', NULL, 12, NULL, NULL, NULL),
  ('{"6","8","O","D","4"}', '4', NULL, 13, NULL, NULL, NULL),
  ('{"V","U"}', 'V', NULL, NULL, '{13}', NULL, NULL),
  ('{"V","U"}', 'V', NULL, NULL, '{14}', NULL, NULL),
  ('{"V","U"}', 'V', NULL, NULL, '{13,12}', NULL, NULL),
  ('{"V","U"}', 'V', NULL, NULL, '{13,14}', NULL, NULL),
  ('{"V","U"}', 'V', NULL, NULL, '{12}', NULL, NULL),
  ('{"V","U"}', 'U', NULL, NULL, '{}', NULL, NULL),
  ('{"W","K"}', 'W', NULL, 0, NULL, NULL, NULL),
  ('{"W","K"}', 'K', NULL, 12, NULL, NULL, NULL),
  ('{"E","6"}', 'E', NULL, 12, NULL, NULL, NULL),
  ('{"E","6"}', 'E', NULL, 13, NULL, NULL, NULL),
  ('{"E","6"}', '6', NULL, 6, NULL, NULL, NULL),
  ('{"E","6"}', '6', NULL, 7, NULL, NULL, NULL),
  ('{"E","6"}', '6', NULL, 11, NULL, NULL, NULL),
  ('{"S","8"}', 'S', NULL, 15, NULL, NULL, NULL),
  ('{"S","8"}', 'S', NULL, 14, NULL, NULL, NULL),
  ('{"S","8"}', '8', NULL, 0, NULL, NULL, NULL),
  ('{"S","8"}', '8', NULL, 1, NULL, NULL, NULL),
  ('{"S","8"}', '8', NULL, 2, NULL, NULL, NULL),
  ('{"T","4"}', 'T', 0, NULL, NULL, NULL, NULL),
  ('{"T","4"}', '4', 4, NULL, NULL, NULL, NULL),
  ('{"T","4"}', '4', 8, NULL, NULL, NULL, NULL),
  ('{"5","8","S","E"}', '5', 0, NULL, '{3,7}', NULL, NULL),
  ('{"5","8","S","E"}', '5', 0, NULL, '{3,11}', NULL, NULL),
  ('{"5","8","S","E"}', '5', 0, NULL, '{3}', NULL, NULL),
  ('{"5","8","S","E"}', '5', 0, NULL, '{7}', NULL, NULL),
  ('{"5","8","S","E"}', '5', 0, NULL, '{7,8}', NULL, NULL),
  ('{"5","8","S","E"}', '5', 0, NULL, '{7,9}', NULL, NULL),
  ('{"5","8","S","E"}', '5', 0, NULL, '{11}', NULL, NULL),
  ('{"5","8","S","E"}', '5', 0, NULL, '{11,12}', NULL, NULL),
  ('{"5","8","S","E"}', '5', 0, NULL, '{7,6}', NULL, NULL),
  ('{"5","8","S","E"}', '5', 0, NULL, '{6}', NULL, NULL),
  ('{"5","8","S","E"}', '5', 0, NULL, '{11,10}', NULL, NULL),
  ('{"5","8","S","E"}', '5', 0, NULL, '{3,13}', NULL, NULL),
  ('{"5","8","S","E"}', '8', 0, 0, NULL, NULL, NULL),
  ('{"5","8","S","E"}', '8', 1, 1, NULL, NULL, NULL),
  ('{"5","8","S","E"}', '8', 1, 0, NULL, NULL, NULL),
  ('{"5","8","S","E"}', '8', 0, 1, NULL, NULL, NULL),
  ('{"5","8","S","E"}', '8', 4, 4, NULL, NULL, NULL),
  ('{"5","8","S","E"}', 'S', NULL, 15, '{}', NULL, NULL),
  ('{"5","8","S","E"}', 'S', NULL, 14, '{}', NULL, NULL),
  ('{"5","8","S","E"}', 'E', NULL, 12, NULL, NULL, NULL),
  ('{"5","8","S","E"}', 'E', NULL, 13, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', '6', 0, 11, '{}', NULL, NULL),
  ('{"6","O","C","G","9"}', '6', 0, 10, '{}', NULL, NULL),
  ('{"6","O","C","G","9"}', '6', 0, 7, '{}', NULL, NULL),
  ('{"6","O","C","G","9"}', 'O', 0, 0, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', 'O', 1, 1, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', 'O', 4, 4, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', 'O', 0, 1, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', 'O', 1, 0, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', 'C', 0, 12, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', 'C', 0, 8, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', 'C', 4, 8, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', 'C', 4, 12, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', 'C', 8, 12, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', 'G', 0, 9, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', 'G', 0, 10, '{8}', NULL, NULL),
  ('{"6","O","C","G","9"}', 'G', 0, 5, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', '9', 0, 14, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', '9', 0, 15, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', '9', 1, 11, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', '9', 1, 14, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', '9', 1, 15, NULL, NULL, NULL),
  ('{"6","O","C","G","9"}', '9', 1, 11, NULL, NULL, NULL),
  ('{"9","8","Q"}', '9', 4, 15, NULL, NULL, NULL),
  ('{"9","8","Q"}', '9', 8, 15, NULL, NULL, NULL),
  ('{"9","8","Q"}', '8', 4, 4, NULL, NULL, NULL),
  ('{"9","8","Q"}', '8', 4, 8, NULL, NULL, NULL),
  ('{"9","8","Q"}', '8', 8, 8, NULL, NULL, NULL),
  ('{"9","8","Q"}', '8', 9, 8, NULL, NULL, NULL),
  ('{"9","8","Q"}', '8', 9, 9, NULL, NULL, NULL),
  ('{"9","8","Q"}', '8', 9, 10, NULL, NULL, NULL),
  ('{"9","8","Q"}', 'Q', 13, 12, NULL, NULL, NULL),
  ('{"9","8","Q"}', 'Q', 12, 12, NULL, NULL, NULL),
  ('{"9","8","Q"}', 'Q', 14, 12, NULL, NULL, NULL),
  ('{"9","8","Q"}', 'Q', 14, 13, NULL, NULL, NULL),
  ('{"3","2","Z"}', '3', 3, 15, NULL, NULL, NULL),
  ('{"3","2","Z"}', '3', 3, 14, NULL, NULL, NULL),
  ('{"3","2","Z"}', '2', 3, 12, '{15}', NULL, NULL),
  ('{"3","2","Z"}', '2', 3, 12, '{14}', NULL, NULL),
  ('{"3","2","Z"}', '2', 3, 13, '{15}', NULL, NULL),
  ('{"3","2","Z"}', '2', 3, 13, '{14}', NULL, NULL),
  ('{"3","2","Z"}', '2', 2, 12, '{15}', NULL, NULL),
  ('{"3","2","Z"}', '2', 2, 12, '{14}', NULL, NULL),
  ('{"3","2","Z"}', '2', 2, 13, '{15}', NULL, NULL),
  ('{"3","2","Z"}', '2', 2, 13, '{14}', NULL, NULL),
  ('{"3","2","Z"}', '2', 3, 12, '{15,14}', NULL, NULL),
  ('{"3","2","Z"}', '2', 3, 13, '{15,14}', NULL, NULL),
  ('{"3","2","Z"}', '2', 2, 12, '{15,14}', NULL, NULL),
  ('{"3","2","Z"}', '2', 2, 13, '{15,14}', NULL, NULL),
  ('{"3","2","Z"}', 'Z', NULL, NULL, '{0,15}', NULL, NULL),
  ('{"3","2","Z"}', 'Z', NULL, NULL, '{1,15}', NULL, NULL),
  ('{"3","2","Z"}', 'Z', NULL, NULL, '{0,14}', NULL, NULL),
  ('{"3","2","Z"}', 'Z', NULL, NULL, '{1,14}', NULL, NULL),
  ('{"3","2","Z"}', 'Z', NULL, NULL, '{1,14,13}', NULL, NULL),
  ('{"3","2","Z"}', 'Z', NULL, NULL, '{0,5,15}', NULL, NULL),
  ('{"2","Z"}', '2', NULL, NULL, '{14}', NULL, NULL),
  ('{"2","Z"}', '2', NULL, NULL, '{15}', NULL, NULL),
  ('{"2","Z"}', '2', NULL, NULL, '{15,14}', NULL, NULL),
  ('{"2","Z"}', 'Z', NULL, NULL, '{0,15}', NULL, NULL),
  ('{"2","Z"}', 'Z', NULL, NULL, '{1,15}', NULL, NULL),
  ('{"2","Z"}', 'Z', NULL, NULL, '{0,14}', NULL, NULL),
  ('{"2","Z"}', 'Z', NULL, NULL, '{1,14}', NULL, NULL),
  ('{"2","Z"}', 'Z', NULL, NULL, '{1,14,13}', NULL, NULL),
  ('{"2","Z"}', 'Z', NULL, NULL, '{0,5,15}', NULL, NULL),
  ('{"7","1"}', '7', NULL, NULL, NULL, NULL, numrange(0,2)),
  ('{"7","1"}', '1', NULL, NULL, NULL, NULL, numrange(2,1000)),
  ('{"7","3"}', '7', NULL, NULL, '{0}', NULL, NULL),
  ('{"7","3"}', '7', NULL, NULL, '{4}', NULL, NULL),
  ('{"7","3"}', '3', NULL, NULL, '{}', NULL, NULL),
  ('{"2","3"}', '2', NULL, 12, NULL, NULL, NULL),
  ('{"2","3"}', '2', NULL, 13, NULL, NULL, NULL),
  ('{"2","3"}', '3', NULL, 14, NULL, NULL, NULL),
  ('{"2","3"}', '3', NULL, 15, NULL, NULL, NULL),
  ('{"O","2","3","U","X"}', 'O', 3, 3, NULL, NULL, NULL),
  ('{"O","2","3","U","X"}', 'O', 2, 2, NULL, NULL, NULL),
  ('{"O","2","3","U","X"}', 'O', 1, 1, NULL, NULL, NULL),
  ('{"O","2","3","U","X"}', '2', NULL, NULL, '{14}', NULL, NULL),
  ('{"O","2","3","U","X"}', '2', NULL, NULL, '{15}', NULL, NULL),
  ('{"O","2","3","U","X"}', '3', 3, 15, NULL, NULL, NULL),
  ('{"O","2","3","U","X"}', '3', 3, 14, NULL, NULL, NULL),
  ('{"O","2","3","U","X"}', 'U', 0, 3, '{}', NULL, NULL),
  ('{"O","2","3","U","X"}', 'X', 0, 3, '{12,15}', NULL, NULL),
  ('{"O","2","3","U","X"}', 'X', 0, 3, '{12}', NULL, NULL),
  ('{"O","2","3","U","X"}', 'X', 0, 3, '{15}', NULL, NULL),
  ('{"O","2","3","U","X"}', 'X', 0, 1, '{15}', NULL, NULL),
  ('{"O","2","3","U","X"}', 'X', 0, 1, '{12,14}', NULL, NULL),
  ('{"9","O"}', '9', 11, 5, NULL, NULL, NULL),
  ('{"9","O"}', '9', 15, 5, NULL, NULL, NULL),
  ('{"9","O"}', '9', 14, 5, NULL, NULL, NULL),
  ('{"9","O"}', '9', 11, 4, NULL, NULL, NULL),
  ('{"9","O"}', '9', 15, 4, NULL, NULL, NULL),
  ('{"9","O"}', '9', 14, 4, NULL, NULL, NULL),
  ('{"9","O"}', '9', 11, 9, NULL, NULL, NULL),
  ('{"9","O"}', '9', 15, 9, NULL, NULL, NULL),
  ('{"9","O"}', '9', 14, 9, NULL, NULL, NULL),
  ('{"9","O"}', '9', 11, 8, NULL, NULL, NULL),
  ('{"9","O"}', '9', 15, 8, NULL, NULL, NULL),
  ('{"9","O"}', '9', 14, 8, NULL, NULL, NULL),
  ('{"9","O"}', '9', 11, 0, NULL, NULL, NULL),
  ('{"9","O"}', '9', 15, 0, NULL, NULL, NULL),
  ('{"9","O"}', '9', 14, 0, NULL, NULL, NULL),
  ('{"9","O"}', 'O', 11, 11, NULL, NULL, NULL),
  ('{"9","O"}', 'O', 15, 15, NULL, NULL, NULL),
  ('{"9","O"}', 'O', 14, 14, NULL, NULL, NULL),
  ('{"9","O"}', 'O', 13, 13, NULL, NULL, NULL),
  ('{"9","O"}', 'O', 12, 12, NULL, NULL, NULL),
  ('{"1","A"}', '1', NULL, NULL, NULL, NULL, numrange(1.7,1000)),
  ('{"1","A"}', 'A', NULL, NULL, NULL, NULL, numrange(0,1.7)),
  ('{"N","A"}', 'N', NULL, 0, NULL, NULL, NULL),
  ('{"N","A"}', 'N', NULL, 1, NULL, NULL, NULL),
  ('{"N","A"}', 'N', NULL, 4, NULL, NULL, NULL),
  ('{"N","A"}', 'A', NULL, 10, NULL, NULL, NULL),
  ('{"N","A"}', 'A', NULL, 11, NULL, NULL, NULL),
  ('{"N","A"}', 'A', NULL, 6, NULL, NULL, NULL),
  ('{"N","A"}', 'A', NULL, 7, NULL, NULL, NULL),
  ('{"N","A"}', 'A', NULL, 9, NULL, NULL, NULL),
  ('{"M","N"}', 'M', NULL, 12, NULL, NULL, NULL),
  ('{"M","N"}', 'N', NULL, 0, NULL, NULL, NULL),
  ('{"M","N"}', 'N', NULL, 1, NULL, NULL, NULL),
  ('{"M","N","A"}', 'M', NULL, 12, NULL, NULL, NULL),
  ('{"M","N","A"}', 'N', NULL, 0, NULL, NULL, NULL),
  ('{"M","N","A"}', 'N', NULL, 1, NULL, NULL, NULL),
  ('{"M","N","A"}', 'A', NULL, 10, NULL, NULL, NULL),
  ('{"M","N","A"}', 'A', NULL, 6, NULL, NULL, NULL),
  ('{"M","N","A"}', 'A', NULL, 7, NULL, NULL, NULL),
  ('{"M","N","A"}', 'A', NULL, 9, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '8', 9, 9, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '8', 8, 8, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '9', 8, 11, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '9', 8, 14, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '9', 8, 15, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '9', 9, 11, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '9', 9, 14, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '9', 9, 15, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '9', 15, 4, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '9', 15, 9, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '9', 14, 4, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '9', 14, 9, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '9', 15, 5, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '9', 14, 5, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'C', 0, 12, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'C', 0, 8, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'C', 4, 8, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'C', 4, 12, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'C', 8, 12, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'C', 0, 13, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'G', 0, 9, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'G', 0, 5, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'G', 4, 9, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'G', 4, 5, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'G', 4, 14, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'G', 4, 13, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'S', 4, 11, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', 'S', 4, 15, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '6', 0, 11, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '6', 0, 10, NULL, NULL, NULL),
  ('{"8","9","C","G","S","6"}', '6', 4, 10, NULL, NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', '2', NULL, NULL, '{14}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', '2', NULL, NULL, '{15}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', '3', 3, 15, NULL, NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', '3', 3, 14, NULL, NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', '3', 2, 15, NULL, NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', '8', 10, 11, NULL, NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', '8', 10, 10, NULL, NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', '8', 9, 10, NULL, NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', '8', 11, 10, NULL, NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,7}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{1,7}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,11}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{7}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{11}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{11}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,6,5}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,0,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{1,7,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,0,7,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,7,10,12}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,7,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{0,7,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,7,12}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{7,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,6,12}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,11,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,11}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,10,9}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,7,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 15, '{3,6,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,7}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{1,7}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,11}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{7}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{11}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,6,5}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,0,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{1,7,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,0,7,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,7,10,12}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,7,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,7,12}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{7,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,6,12}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,11,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,11}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,10,9}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,7,6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,6,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'B', 15, 14, '{3,1,7,6,12}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'D', 15, 15, '{3}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'D', 15, 14, '{3}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'D', 15, 13, '{3}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'D', 15, 15, '{}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'D', 15, 14, '{}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'D', 15, 13, '{}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'P', 15, 11, '{}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'P', 15, 11, '{3}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'P', 15, 11, '{3,4}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'P', 15, 11, '{3,0}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'P', 15, 6, '{}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'P', 15, 6, '{3}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'P', 15, 6, '{3,4}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'P', 15, 6, '{3,0}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{7}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{3,7}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{3,4,7}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{3,0,7}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{7,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{3,7,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{3,4,7,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{3,0,7,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{3,7,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{3,10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{6}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{10}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{11}', NULL, NULL),
  ('{"2","3","8","B","D","P","R"}', 'R', 15, 12, '{4,7,6}', NULL, NULL);
-- select * from criteria;

-- ==================== RECURSIVE QUERY ====================

WITH RECURSIVE
-- Step 1: Load tablet data (could be skipped)
tablet(cnt, x, y) AS (
  SELECT cnt, x, y
  FROM coords
),

-- Step 2: Smooth the tablet data 
smooth(cnt, x, y) AS (
  SELECT cnt, x::real, y::real
  FROM tablet
  WHERE cnt = 0
  
  UNION ALL
  
  SELECT t.cnt,
         (0.70 * s.x + 0.30 * t.x) :: real AS x,
         (0.70 * s.y + 0.30 * t.y) :: real AS y
  -- 70% smoothing - min 60, max 85
  FROM smooth s
  JOIN tablet t ON t.cnt = s.cnt + 1
  WHERE t.cnt IS NOT NULL
    AND s.cnt <= (SELECT MAX(cnt) FROM tablet)
),

-- Step 3: Thin the smoothed data
thin(cnt, x, y) AS (
  SELECT s.cnt, s.x, s.y
  FROM smooth s
  WHERE s.cnt = 0
  
  UNION ALL
  
  SELECT s.cnt, s.x, s.y
  FROM smooth s
  LEFT JOIN smooth prev ON prev.cnt = s.cnt - 1 
  WHERE prev.cnt IS NULL 
     OR sqrt((s.x - prev.x)^2 + (s.y - prev.y)^2) > 1
	 -- Distance checked for thining
	 -- 0  disables. Change for more or less thinning
),

-- Step 4: Calculate and assign cardinal directions
curve(cnt, x, y, direction) AS (
	SELECT cnt, x, y, direction
	FROM (
	  SELECT cnt, x, y,
	         CASE 
				 WHEN lag(x) OVER (ORDER BY cnt) IS NULL THEN 
	             (enum_range(NULL::directions))[
	               ((degrees(atan2(lead(y) OVER 
				   (ORDER BY cnt) - y, lead(x) OVER 
				   (ORDER BY cnt) - x)) + 360) / 90)::int % 4 + 1
	             ]::directions
				 ELSE 
	             (enum_range(NULL::directions))[
	               ((degrees(atan2(-y + lag(y) OVER 
				   (ORDER BY cnt), x - lag(x) OVER 
				   (ORDER BY cnt))) + 360) / 90)::int % 4 + 1
	             ]::directions
	         END AS direction
	  FROM thin
	  GROUP BY cnt, x, y
	  )
	WHERE cnt != 0
),

-- Step 5: Detect direction changes
direction_change(cnt, direction) AS (
  SELECT cnt, direction
  FROM (
    SELECT cnt, direction,
           CASE 
               WHEN cnt = (SELECT MIN(cnt) 
			   FROM curve) THEN TRUE 
			   -- Always include the first direction
               ELSE COALESCE(lag(direction, 2) OVER 
			   (ORDER BY cnt), direction) <> direction  AND 
			   lag(direction) OVER 
			   (ORDER BY cnt) = direction
           END AS is_new
    FROM curve
  ) AS _
  WHERE is_new
)
-- SELECT * FROM direction_change
,

-- Step 5.5 Make it an array
direction_changeArr(direction) AS (
  SELECT array_agg(direction ORDER BY cnt) AS direction
  FROM (
    SELECT cnt, direction,
COALESCE(lead(direction) OVER 
		(ORDER BY cnt), direction) <> direction 
           OR lead(direction) OVER 
		   (ORDER BY cnt) IS NULL AS is_new
    FROM direction_change
  ) AS _
  WHERE is_new
),

-- Step 6: Identify corners based on angles
corner(cnt, x, y) AS (
  SELECT cnt, x, y, angle_change
  FROM (
    SELECT cnt, x, y,
           degrees(abs(atan2(y - lag(y) OVER 
		   (ORDER BY cnt), x - lag(x) OVER (ORDER BY cnt))
           - atan2(lead(y) OVER 
		   (ORDER BY cnt) - y, lead(x) OVER (ORDER BY cnt) - x)))
           AS angle_change
    FROM curve
  ) AS _
  WHERE angle_change > 60 
  -- Angle threshold for detecting a corner (in degrees)
),

-- Step 7: Bounding box (grid)
grid(xmin, xmax, ymin, ymax, aspect, 
	width, height, centerx, centery) AS (
  SELECT 
         MIN(x), MAX(x), MIN(y), MAX(y),
         (MAX(y) - MIN(y)) / GREATEST(1, (MAX(x) - MIN(x))),
         MAX(x) - MIN(x), MAX(y) - MIN(y),
         MIN(x) + (MAX(x) - MIN(x)) / 2,
         MIN(y) + (MAX(y) - MIN(y)) / 2
  FROM smooth
),

-- Step 8: Identify start grid position
start_grid(n) AS (
  SELECT grid_position(a.width, a.height, a.xmin, a.ymin, s.x, s.y)
  FROM smooth s
  JOIN grid a ON TRUE
  ORDER BY s.cnt
  LIMIT 1
),

-- Step 9: Identify finish grid position
finish_grid(n) AS (
  SELECT grid_position(a.width, a.height, a.xmin, a.ymin, s.x, s.y)
  FROM smooth s
  JOIN grid a ON TRUE
  ORDER BY s.cnt DESC
  LIMIT 1
),

-- Step 10: Map corners to grid
corner_grid(cnt, n) AS (
  SELECT DISTINCT ON (grid_position) c.cnt, 
         grid_position(a.width, a.height, a.xmin, a.ymin, c.x, c.y)
  FROM corner c
  JOIN grid a ON TRUE
),

-- Step 11: Aggregate features
features(directions, start, finish, 
	corners, width, height, aspect, center, thin_coords) AS (
  SELECT 
         (TABLE direction_changeArr) AS directions,
         (TABLE start_grid) AS start,
         (TABLE finish_grid) AS finish,
         COALESCE(array_agg(cg.n ORDER BY cg.cnt) FILTER 
		 	(WHERE cg.n IS NOT NULL), '{}') AS corners,
         a.width, a.height, a.aspect,
         POINT(a.centerx::INTEGER, a.centery::INTEGER) AS center,
         array_agg(POINT(t.x, t.y) ORDER BY t.cnt) AS thin_coords
  FROM curve c
  JOIN grid a ON TRUE
  LEFT JOIN corner_grid cg ON c.cnt = cg.cnt
  LEFT JOIN thin t ON t.cnt = c.cnt -- Ensure thin coordinates included
  GROUP BY a.width, a.height, a.aspect, a.centerx, a.centery
)
-- SELECT * FROM features;
,

-- Step 12: Select possible characters based on first 4 directions
matched_possible_characters AS (
	SELECT c.*
	FROM (
		SELECT pc.candidate_characters
	        -- ,pc.first_four_directions
	    FROM possible_characters pc
	    JOIN features f
	        ON f.directions[1:LEAST(4, array_length(f.directions, 1))] =
	           									pc.first_four_directions
	) AS cc
	JOIN criteria c ON c.candidate_characters=cc.candidate_characters
)
-- Select * from matched_possible_characters
-- Select * from features
,

-- Step 13: Choose character
character_match AS (
    SELECT 
        mc.character,
        f.directions,
        f.start,
        f.finish,
        f.corners,
        f.aspect,
        f.center,
		(
            SELECT COUNT(*)
            FROM UNNEST(f.corners) AS fc
            JOIN UNNEST(mc.corners) AS mc_c ON fc = mc_c
        ) AS corner_match_score,
        ABS(f.aspect - lower(mc.aspect_range)) + 
		ABS(f.aspect - upper(mc.aspect_range)) AS aspect_score,
        CASE 
            WHEN f.start = f.finish THEN 1
            ELSE 0
        END AS start_end_match_score,
        CASE
            WHEN sqrt((f.center[0] - s.x)^2 + (f.center[1] - s.y)^2) < 10
			THEN 1
            ELSE 0
        END AS center_proximity_score,
        (
            (
                SELECT COUNT(*)
                FROM UNNEST(f.corners) AS fc
                JOIN UNNEST(mc.corners) AS mc_c ON fc = mc_c
            ) + 
            CASE 
                WHEN f.start = f.finish THEN 1
                ELSE 0
            END +
            CASE
                WHEN sqrt((f.center[0] - s.x)^2
				+ (f.center[1] - s.y)^2) < 10 
				THEN 1
                ELSE 0
            END
        ) AS total_score,
        f.thin_coords -- Move thin_coords to the last column
    FROM matched_possible_characters mc
    LEFT JOIN features f ON TRUE 
    LEFT JOIN (
        SELECT x, y
        FROM smooth
        ORDER BY cnt DESC
        LIMIT 1
    ) s ON TRUE
    WHERE 
        (mc.start IS NULL OR mc.start = f.start) AND
        (mc.finish IS NULL OR mc.finish = f.finish) AND
        (mc.aspect_range IS NULL OR f.aspect::NUMERIC <@ mc.aspect_range)
    ORDER BY 
        total_score DESC, -- Highest combined score
        aspect_score ASC -- Aspect ratio
    LIMIT 1 -- Best Match
)

SELECT *
FROM character_match;



